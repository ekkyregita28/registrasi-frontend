'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useRouterHook;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RouterHookContext = require('./RouterHookContext');

var _RouterHookContext2 = _interopRequireDefault(_RouterHookContext);

var _RouterHookContainer = require('./RouterHookContainer');

var _RouterHookContainer2 = _interopRequireDefault(_RouterHookContainer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function noop() {}

function useRouterHook(options) {
  var container = null;
  var _options$locals = options.locals,
      locals = _options$locals === undefined ? {} : _options$locals,
      _options$onAborted = options.onAborted,
      onAborted = _options$onAborted === undefined ? noop : _options$onAborted,
      _options$onCompleted = options.onCompleted,
      onCompleted = _options$onCompleted === undefined ? noop : _options$onCompleted,
      _options$onError = options.onError,
      onError = _options$onError === undefined ? noop : _options$onError,
      _options$onStarted = options.onStarted,
      onStarted = _options$onStarted === undefined ? noop : _options$onStarted,
      _options$routerDidEnt = options.routerDidEnterHooks,
      routerDidEnterHooks = _options$routerDidEnt === undefined ? [] : _options$routerDidEnt,
      _options$routerWillEn = options.routerWillEnterHooks,
      routerWillEnterHooks = _options$routerWillEn === undefined ? [] : _options$routerWillEn;

  return {
    renderRouterContext: function renderRouterContext(child, renderProps) {
      var components = renderProps.components,
          location = renderProps.location;

      return _react2.default.createElement(
        _RouterHookContext2.default,
        {
          components: components,
          location: location,
          onAborted: onAborted,
          onCompleted: onCompleted,
          onError: onError,
          onStarted: onStarted
        },
        child
      );
    },
    renderRouteComponent: function renderRouteComponent(child, renderProps) {
      if (!child) {
        return null;
      }
      if (!container) {
        container = _react2.default.createElement(
          _RouterHookContainer2.default,
          {
            locals: locals,
            renderProps: renderProps,
            routerDidEnterHooks: routerDidEnterHooks,
            routerWillEnterHooks: routerWillEnterHooks
          },
          child
        );
        return container;
      }
      return _react2.default.cloneElement(container, {
        locals: locals,
        renderProps: renderProps,
        routerDidEnterHooks: routerDidEnterHooks,
        routerWillEnterHooks: routerWillEnterHooks
      }, child);
    }
  };
}